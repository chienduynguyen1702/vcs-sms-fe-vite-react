name: Clouding Frontend CI

on:
  pull_request:
    branches:
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest
    environment: Clouding-aws
    env:
      NODE_ENV: production
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ vars.NODE_VER }}

      - name: Caching node modules # get cache hash file in runner
        id:  node-modules-cache 
        uses: actions/cache@v3
        with:
          path: node_modules
          key: clouding-frontend-${{ runner.os }}-node_modules-cache-restore-key-from-package.json-${{ hashFiles('**/package.json') }}
          restore-keys: |
            clouding-frontend-${{ runner.os }}-node_modules-cache-restore-key-from-package.json-${{ hashFiles('**/package.json') }}

      - name: check env file
        env:
          PROJECT_NAME: ${{vars.PROJECT_NAME}}
          PROJECT_URL: ${{vars.PROJECT_URL}}
          PROJECT_BASE_URL: ${{vars.PROJECT_BASE_URL}}
        run: |
          echo "REACT_APP_PROJECT_NAME=$PROJECT_NAME" >> .env
          echo "REACT_APP_PROJECT_URL=$PROJECT_URL" >> .env
          echo "REACT_APP_PROJECT_BASE_URL=$PROJECT_BASE_URL" >> .env
          cat .env
          ls -la

      - name: Install dependencies
        #if cache is true then skip npm i, else run npm i
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: yarn 
        
      - name: Build
        run: CI=false yarn build

      - name: Test unit
        run: yarn test